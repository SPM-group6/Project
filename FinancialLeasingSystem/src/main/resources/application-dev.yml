spring:
  application:
    name: FinanceLeasingSystem
  main:
    allow-circular-references: true
  datasource:
   # url: jdbc:mysql://localhost:3306/hwadee?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&useSSL=true
    url: jdbc:mysql://localhost:3306/hwadee?serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true&useAffectedRows=true
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
    # Hikari 连接池配置
    # 最小空闲连接数量
    hikari:
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 数据库连接超时时间,默认30秒，即30000 非特殊业务场景保持缺省30s连接超时即可
      connection-timeout: 30000
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 180000
      # 连接池的最小空闲数
      minimum-idle: 5
      # 定期验证连接的有效性, 需要比maxLifeTime小，只会对池中空闲连接发生keeplive
      keepalive-time: 60000
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟，这里设置为25分钟
      max-lifetime: 1500000
      # 连接池最大连接数，默认是10,设置为cpu核心数的2倍
      maximum-pool-size: 8
      # 连接池名称
      pool-name: MyHikariCP
      connection-test-query: SELECT 1
    redis:
      database: 0
      host: 127.0.0.1
      port: 6379
      password:
      jedis:
        pool:
          max-active: 50
          max-wait: 3000
          max-idle: 20
          min-idle: 2
      timeout: 6000

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8

mybatis:
  mapper-locations: classpath:/mapping/*.xml
  type-aliases-package: com.hwadee.entity
  configuration:
    cache-enabled: true
    map-underscore-to-camel-case: true
#  log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

server:
  servlet:
    context-path: /hwadee
  port: 8082
  compression:
    enabled: true
    min-response-size: 1024
    mime-types:
      - image/png
      - image/jpeg
      - image/jpg
      - text/html
      - application/javascript
      - text/css
      - application/octet-stream
      - application/json

logging:
  level:
    com.hwadee.core.repository: debug
  file:
    name: hwadee.log

# promethues
management:
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    prometheus:
      enabled: true
    tags:
      application: ${spring.application.name}

